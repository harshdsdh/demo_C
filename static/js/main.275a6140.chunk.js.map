{"version":3,"sources":["useDropdown.js","ShortlistedDataContext.js","useTable.js","Results.js","Shortlisted.js","All.js","AllDataContext.js","App.js","reportWebVitals.js","index.js"],"names":["useDropdown","label","defaultState","options","useState","state","setState","id","replace","toLowerCase","htmlFor","value","onChange","e","target","onBlur","disabled","length","map","item","ShortlistedDataContext","createContext","useTable","data","useContext","shortData","setShortData","d","setD","useEffect","onDelete","selected_ind","type","temp_data","splice","row","ind","City","State","District","onClick","push","Results","props","orig_btn","TableHook","className","Shortlisted","All","location","setLocation","setData","para","ParamDropdown","fetch","then","response","json","arr","fetch_orig_data","placeholder","prop","SearchParams","AllDataContext","App","Data","Provider","to","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.275a6140.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst useDropdown = (label, defaultState, options) => {\r\n  const [state, setState] = useState(defaultState);\r\n  const id = `use-dropdown-${label.replace(\" \", \"\").toLowerCase()}`;\r\n  const Dropdown = () => (\r\n    <label htmlFor={id}>\r\n      {label}\r\n      <select\r\n        id={id}\r\n        value={state}\r\n        onChange={e => setState(e.target.value)}\r\n        onBlur={e => setState(e.target.value)}\r\n        disabled={!options.length}\r\n      >\r\n        <option />\r\n        {options.map(item => (\r\n          <option key={item} value={item}>\r\n            {item}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </label>\r\n  );\r\n  return [state, Dropdown];\r\n};\r\n\r\nexport default useDropdown;","import { createContext } from \"react\";\r\n\r\nconst ShortlistedDataContext = createContext([[], () => {}]);\r\n\r\nexport default ShortlistedDataContext;","import React,{useContext, useEffect, useState} from \"react\";\r\nimport ShortlistedDataContext from './ShortlistedDataContext'\r\n\r\nconst useTable = (label, defaultState, data) => {\r\n    const [shortData, setShortData] = useContext(ShortlistedDataContext);\r\n    const [d, setD] = useState([])\r\n    useEffect(()=>{\r\n      setD(data||[])\r\n    },[data])\r\n    \r\n\r\n    setShortData(shortData)\r\n    const ShortlistedData=(selected_ind)=>{\r\n      data.map((row, ind)=>(\r\n        ind===selected_ind?shortData.push(row):null\r\n      ))\r\n      setShortData(shortData)\r\n    }\r\n    const onDelete=(selected_ind, type)=>{\r\n      if(type==='all'){\r\n      let temp_data = [...data]\r\n      temp_data.splice(selected_ind,1)\r\n      setD(temp_data)\r\n      }\r\n      else{\r\n        let temp_data = [...shortData]\r\n      temp_data.splice(selected_ind,1)\r\n      setShortData(temp_data)\r\n      }\r\n   \r\n    }\r\n    const id = `use-table-${label.replace(\" \", \"\").toLowerCase()}`;\r\n    const Table = () => (\r\n        <table id={id}>\r\n            <thead>\r\n            <tr>\r\n    <th>City</th>\r\n    <th>State</th>\r\n    <th>District</th>\r\n    {defaultState==='all'|| ''?<th>action</th>:null}\r\n        </tr></thead>\r\n        {defaultState==='all'|| ''?(<tbody>\r\n        {d.map((row, ind) => (  \r\n          <tr id = {ind}>\r\n              <td key={`${ind}- ${row.City}`}>{row.City}</td>\r\n          <td key={`${ind} - ${row.State}`}>{row.State}</td>\r\n          <td key={`${ind} - ${row.District}`}>{row.District}</td>\r\n          <button onClick={()=>ShortlistedData(ind)}>Shortlist</button>\r\n          <button onClick={()=>onDelete(ind, 'all')}>Delete</button>\r\n          </tr>\r\n        ))}\r\n        </tbody>):(\r\n            <tbody>\r\n            {data.map((row,ind) => (  \r\n              <tr id = {ind}>\r\n                  <td key={`${ind}- ${row.City}`}>{row.City}</td>\r\n              <td key={`${ind} - ${row.State}`}>{row.State}</td>\r\n              <td key={`${ind} - ${row.District}`}>{row.District}</td>\r\n              <button onClick={()=>onDelete(ind, 'short')}>Remove Shortlist</button>\r\n              </tr>\r\n            ))}\r\n            </tbody>\r\n        )}\r\n        \r\n      </table>\r\n    );\r\n    return ['', Table];\r\n  };\r\n  \r\n  export default useTable;","import React from \"react\";\r\nimport useTable from \"./useTable\";\r\nconst Results = ({props, orig_btn})=>{\r\n    const [table, TableHook] = useTable(\"table\", orig_btn, props);\r\n    return(\r\n        <div className = 'result'>{!props?(<h1>No results found</h1>):(\r\n            <TableHook/>)\r\n        }\r\n        </div>\r\n    )\r\n}\r\nexport default Results","import React, {useState, useEffect, useContext} from \"react\";\r\nimport ShortlistedDataContext from \"./ShortlistedDataContext\";\r\nimport Results from './Results'\r\nconst Shortlisted = ()=>{\r\n    const [shortData, setShortData] = useContext(ShortlistedDataContext);\r\n    return(\r\n        <div className='shortlisted-detail'>\r\n            {shortData.length>0?(<Results props={shortData} orig_btn={'shortlisted'}></Results>):<h2>No shortlisted results</h2>}\r\n        </div>\r\n       \r\n    )\r\n\r\n}\r\nexport default Shortlisted","import React, {useState, useEffect, useContext} from \"react\";\r\nimport useDropdown from './useDropdown'\r\nimport Results from './Results'\r\nimport Shortlisted from \"./Shortlisted\";\r\n\r\nconst All = ()=>{\r\n    const [location, setLocation] = useState('')\r\n    const [data, setData] = useState([])\r\n    const dropdown_param = ['City', 'State', 'District']\r\n    const [para, ParamDropdown] = useDropdown(\"selectDropdown\", \"\", dropdown_param);\r\n    const fetch_api = 'https://next.json-generator.com/api/json/get/EJT-LmOrY'\r\n    useEffect(()=>{\r\n        fetch(fetch_api).then(response=>response.json())\r\n                        .then(data => fetch_orig_data(data))\r\n    },[])\r\n   function fetch_orig_data(data){\r\n        let arr=[]\r\n        arr.push(data)\r\n        setData(arr|| [])\r\n    }\r\n    const SearchParams=()=>{\r\n        if(location.length && para.length){\r\n            let d=[]\r\n            data[0].map((prop,ind)=>(\r\n                prop[para].toLowerCase()===location.toLowerCase()?d.push(prop):null\r\n            ))\r\n            let arr=[]\r\n            arr.push(d)\r\n            setData(arr|| [])\r\n            \r\n            }\r\n    }\r\n    return(\r\n        <div className='AllDetail'>\r\n            <div className='searchParam'>\r\n            <label htmlFor=\"location\">\r\n            Location\r\n            <input id=\"location\" value={location} placeholder=\"Location\" \r\n            onChange = {e=>setLocation(e.target.value)}/>\r\n          </label>\r\n          <ParamDropdown/>\r\n          <button onClick={()=>SearchParams()}>submit</button>\r\n          </div>\r\n          {location===''||location.length>0 ?(<Results props={data[0]} orig_btn={'all'}></Results>):null}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default All","import { createContext } from \"react\";\r\n\r\nconst AllDataContext = createContext([[], () => {}]);\r\n\r\nexport default AllDataContext;","import './index.css'\nimport React, { Component, useState } from \"react\";\nimport {Route, NavLink, HashRouter } from \"react-router-dom\";\nimport All from './All'\nimport Shortlisted from './Shortlisted'\nimport ShortlistedDataContext from \"./ShortlistedDataContext\";\nimport AllDataContext from './AllDataContext';\nfunction App() {\n  const Data = useState([])\n  return (\n    <ShortlistedDataContext.Provider value ={Data}>\n    <AllDataContext.Provider value ={Data}>\n    <HashRouter>\n    <div className=\"App\">\n      <h1>City - Dashboard</h1>\n      <div className='main'>\n      <ul className='masterList'>\n        <li><NavLink to='/'>All</NavLink></li>\n        <li><NavLink to='shortlisted'>Shortlisted</NavLink></li>\n      </ul>\n      <div className='content'>\n        <Route exact path=\"/\" component={All}/>\n        <Route path=\"/shortlisted\" component={Shortlisted}/>\n      </div>\n      </div>\n    </div>\n    </HashRouter>\n    </AllDataContext.Provider>\n    </ShortlistedDataContext.Provider>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}